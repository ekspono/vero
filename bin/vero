#!/bin/sh

PLATFORM=$(uname -s)

READLINK_CMD=$(bb -i '(let [n (clojure.string/trim (first *command-line-args*))] 
                          (print (cond 
                                     (= "Linux" n) "readlink"
                                     (= "Darwin" n) "greadlink"
                                     :else "unsupported")))' $PLATFORM)

if [ $READLINK_CMD = "unsupported" ]; then
    echo "vero error: Unsupported platform: $PLATFORM"
    exit 1
fi

SCRIPT=$(readlink -f "$0")
SCRIPTPATH=$(dirname "$SCRIPT")

VERO_CLASSPATH="${SCRIPTPATH}/../src"

PASS_THROUGH_ARGS=$(bb -i '(let [args (->> *command-line-args*
                                            (remove (fn [s] (re-matches #"--vero-.*" s))))]
                                (print (clojure.string/join " " args)))' $@)
EXTRA_CLASSPATH=$(bb -i '(let [args (->> *command-line-args*
                                         (filter (fn [s] (re-matches #"--vero-.*" s)))
                                         (map (fn [s]
                                                (let [p (clojure.string/split s #"=")] [(first p) (second p)])))
                                         (into {}))]
                            (print (get args "--vero-classpath")))' $@)

bb --classpath "$VERO_CLASSPATH:$EXTRA_CLASSPATH" $PASS_THROUGH_ARGS
